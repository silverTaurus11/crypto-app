opt_out_usage
default_platform(:android)

platform :android do
  desc "Build & distribute AAB (prod release) with keystore signing"
  lane :release do
    UI.message "ðŸ”‘ Preparing keystore and key.properties..."
    keystore_dir = "android/app"
    keystore_file = File.join(keystore_dir, "upload-keystore.jks")
    FileUtils.mkdir_p(keystore_dir)

    # Decode keystore dari secret
    if ENV["ANDROID_KEYSTORE_BASE64"].to_s.strip.empty?
      UI.user_error!("ANDROID_KEYSTORE_BASE64 is missing or empty")
    end
    File.open(keystore_file, "wb") do |f|
      f.write(Base64.decode64(ENV["ANDROID_KEYSTORE_BASE64"]))
    end

    # Generate key.properties
    key_props = <<~EOF
      storePassword=#{ENV["ANDROID_KEYSTORE_PASSWORD"]}
      keyPassword=#{ENV["ANDROID_KEY_ALIAS_PASSWORD"]}
      keyAlias=#{ENV["ANDROID_KEY_ALIAS"]}
      storeFile=upload-keystore.jks
    EOF
    File.write("android/key.properties", key_props)

    # ====== Debug log ======
    UI.message "==== CHECK FILES ===="
    sh("ls -lh android/app/")

    UI.message "==== key.properties ===="
    sh("cat android/key.properties")

    UI.message "==== keytool verify keystore (storePassword) ===="
    sh("keytool -list -v -keystore android/app/upload-keystore.jks -storepass #{ENV['ANDROID_KEYSTORE_PASSWORD']} || true")

    UI.message "==== keytool verify alias (aliasPassword) ===="
    sh("keytool -v -keystore android/app/upload-keystore.jks -storepass #{ENV['ANDROID_KEYSTORE_PASSWORD']} -keypass #{ENV['ANDROID_KEY_ALIAS_PASSWORD']} -alias #{ENV['ANDROID_KEY_ALIAS']} || true")

    # ====== Flutter build AAB ======
    sh("flutter clean")
    sh("flutter build appbundle --flavor prod -t lib/main_prod.dart --release")

    aab_path = Dir["build/app/outputs/bundle/prodRelease/app-prod-release.aab"].first
    UI.user_error!("AAB not found") unless aab_path && File.exist?(aab_path)

    # ====== Upload ke Firebase App Distribution ======
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID_ANDROID"],
      release_notes: ENV["RELEASE_NOTES"] || "CI build",
      service_credentials_file: ENV["FIREBASE_CREDENTIALS_JSON_PATH"] || "firebase_credentials.json",
      groups: ENV["FIREBASE_GROUPS"],
      android_artifact_type: "AAB",
      android_artifact_path: aab_path
    )
  end
end
