name: Flutter CI/CD Android

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    name: Build & Distribute Android (prod)

    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Java (Gradle needs JDK 17)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Setup Flutter (pakai channel beta supaya dapat Dart >= 3.6.1)
      - name: Setup Flutter (beta with Dart 3.6.1)
        uses: subosito/flutter-action@v2
        with:
          channel: "beta"

      # Install dependencies
      - name: Flutter pub get
        run: flutter pub get

      - name: Debug check ANDROID_KEYSTORE_BASE64 length
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | wc -c
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      # Decode Android Keystore dari secret base64
      - name: Decode Android Keystore
        run: |
          mkdir -p android/keystore
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/keystore/upload-keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyPassword=${ANDROID_KEY_ALIAS_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          storeFile=keystore/upload-keystore.jks
          EOF
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}


        # Tulis Firebase credentials JSON
      - name: Write Firebase credentials
        run: echo '${{ secrets.FIREBASE_CREDENTIALS_JSON }}' > firebase_credentials.json

      # Setup Ruby & Bundler
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      # Install Fastlane & plugin dari Gemfile/Pluginfile
      - name: Install Fastlane & Firebase plugin
        run: bundle install

      # Build & upload AAB prod flavor ke Firebase App Distribution
      - name: Fastlane android release (AAB)
        env:
          FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          FIREBASE_GROUPS: ${{ secrets.FIREBASE_GROUPS }}
          FIREBASE_CREDENTIALS_JSON_PATH: firebase_credentials.json
          RELEASE_NOTES: "GitHub CI AAB build ${{ github.ref_name }} by ${{ github.actor }}"
        run: bundle exec fastlane android release

      # Upload artifacts (opsional)
      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            build/app/outputs/bundle/prodRelease/*.aab
            build/app/outputs/flutter-apk/*.apk
